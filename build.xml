<?xml version="1.0" encoding="UTF-8"?>
<project name="podcast-manager" default="dev_head" basedir=".">
	<!-- Project properties -->
	<property file="./build.properties" />
	<property name="repo.dir" value="." />
	<property name="version" value="2.0.alpha+dev" />
	<resolvepath propertyName="repo.dir.resolved" file="${repo.dir}" />
	<tstamp>
		<format property="build.date" pattern="%Y-%m-%d" />
	</tstamp>

	<!-- Build a package for testing -->
	<target name="dev_head" description="Builds test packages based on the development head" depends="phpcs,rebuild-packages,copy-files,zip-packages">
		<echo msg="Deleting old master builds" />
		<delete includeemptydirs="true">
			<fileset dir=".">
				<include name="files_podcastmanager_hathor_${version}.zip" />
				<include name="pkg_podcastmanager_${version}.zip" />
			</fileset>
		</delete>
		<echo msg="Build Podcast Manager package" />
		<zip destfile="pkg_podcastmanager_${version}.zip">
			<fileset dir="packaging">
				<include name="language/**" />
				<include name="packages/**" />
				<include name="pkg_podcastmanager.xml" />
				<include name="script.php" />
			</fileset>
		</zip>
		<echo msg="Building Hathor Overrides package" />
		<zip destfile="files_podcastmanager_hathor_${version}.zip" basedir="packaging/files_podcastmanager_hathor" />
	</target>

	<!-- Build a package for release -->
	<target name="release" description="Builds release packages based on the development head" depends="rebuild-packages,copy-files,zip-packages">
		<echo msg="Build Podcast Manager package" />
		<mkdir dir="releases" />
		<zip destfile="releases/pkg_podcastmanager_${version}.zip">
			<fileset dir="packaging">
				<include name="language/**" />
				<include name="packages/**" />
				<include name="pkg_podcastmanager.xml" />
			</fileset>
		</zip>
		<echo msg="Building Hathor Overrides package" />
		<zip destfile="releases/files_podcastmanager_hathor_${version}.zip" basedir="packaging/files_podcastmanager_hathor" />
		<echo msg="Creating Git tag" />
		<gittag repository="${repo.dir.resolved}" name="${version}" gitPath="${localgit}" />
		<echo msg="Pushing Version commit and tag to GitHub" />
		<gitpush repository="${repo.dir.resolved}" gitPath="${localgit}" />
		<gitpush repository="${repo.dir.resolved}" tags="true" gitPath="${localgit}" />
	</target>

	<!-- Copy files to staging to allow for manipulation pre-package -->
	<target name="copy-files" description="Stages the common files" depends="rebuild-packages">
		<echo msg="Staging files for packaging" />

		<echo msg="Create com_podcastmanager package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/com_podcastmanager">
                <fileset dir="com_podcastmanager" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create com_podcastmedia package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/com_podcastmedia">
                <fileset dir="com_podcastmedia" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create lib_getid3 package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/lib_getid3">
                <fileset dir="lib_getid3" />
            </copy>

		<echo msg="Create mod_podcastmanager package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/mod_podcastmanager">
                <fileset dir="mod_podcastmanager" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create mod_podcastmanagerfeed package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/mod_podcastmanagerfeed">
                <fileset dir="mod_podcastmanagerfeed" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create plg_content_podcastmanager package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/plg_content_podcastmanager">
                <fileset dir="plg_content_podcastmanager" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create plg_editors-xtd_podcastmanager package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/plg_editors-xtd_podcastmanager">
                <fileset dir="plg_editors-xtd_podcastmanager" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create plg_finder_podcastmanager_feeds package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/plg_finder_podcastmanager_feeds">
                <fileset dir="plg_finder_podcastmanager_feeds" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create plg_finder_podcastmanager_podcasts package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/plg_finder_podcastmanager_podcasts">
                <fileset dir="plg_finder_podcastmanager_podcasts" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Create plg_podcastmedia_user package" />
            <mkdir dir="packaging/staging" />
            <copy todir="packaging/staging/plg_podcastmedia_user">
                <fileset dir="plg_podcastmedia_user" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Copy package manifest" />
            <copy file="pkg_podcastmanager.xml" tofile="packaging/pkg_podcastmanager.xml" overwrite="true">
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>

		<echo msg="Copy package scriptfile" />
		<copy file="script.php" tofile="packaging/script.php" overwrite="true" />

		<echo msg="Copy package language" />
            <copy todir="packaging/language">
                <fileset dir="language" />
            </copy>

		<echo msg="Create files_podcastmanager_hathor package" />
            <copy todir="packaging/files_podcastmanager_hathor">
                <fileset dir="files_podcastmanager_hathor" />
				<filterchain>
					<replacetokens begintoken="##" endtoken="##">
						<token key="DATE" value="${build.date}" />
						<token key="VERSION" value="${version}" />
					</replacetokens>
				</filterchain>
            </copy>
	</target>

	<!-- ZIP the separate extension packages -->
	<target name="zip-packages" description="Creates ZIP archives for installation" depends="rebuild-packages,copy-files">
		<echo msg="Archiving packages" />
		<mkdir dir="packaging/packages" />
		<zip destfile="packaging/packages/com_podcastmanager.zip" basedir="packaging/staging/com_podcastmanager" />
		<zip destfile="packaging/packages/com_podcastmedia.zip" basedir="packaging/staging/com_podcastmedia" />
		<zip destfile="packaging/packages/lib_getid3.zip" basedir="packaging/staging/lib_getid3" />
		<zip destfile="packaging/packages/mod_podcastmanager.zip" basedir="packaging/staging/mod_podcastmanager" />
		<zip destfile="packaging/packages/mod_podcastmanagerfeed.zip" basedir="packaging/staging/mod_podcastmanagerfeed" />
		<zip destfile="packaging/packages/plg_content_podcastmanager.zip" basedir="packaging/staging/plg_content_podcastmanager" />
		<zip destfile="packaging/packages/plg_editors-xtd_podcastmanager.zip" basedir="packaging/staging/plg_editors-xtd_podcastmanager" />
		<zip destfile="packaging/packages/plg_finder_podcastmanager_feeds.zip" basedir="packaging/staging/plg_finder_podcastmanager_feeds" />
		<zip destfile="packaging/packages/plg_finder_podcastmanager_podcasts.zip" basedir="packaging/staging/plg_finder_podcastmanager_podcasts" />
		<zip destfile="packaging/packages/plg_podcastmedia_user.zip" basedir="packaging/staging/plg_podcastmedia_user" />
	</target>

	<!-- Rebuild the staging area -->
	<target name="rebuild-packages" description="Delete old packages">
		<echo msg="Deleting packaging directory" />
		<delete includeemptydirs="true">
			<fileset dir=".">
				<include name="packaging" />
			</fileset>
		</delete>
		<echo msg="Creating packaging directory" />
		<mkdir dir="packaging" />
	</target>

	<!-- Check code style based on Joomla Platform -->
	<target name="phpcs" description="Generate codestyle report using PHP_CodeSniffer">
		<echo msg="Remove previous codestyle report" />
		<delete quiet="yes" includeemptydirs="true">
			<fileset dir=".">
				<include name="build/codesniff.txt" />
				<include name="build/checkstyle.xml" />
			</fileset>
		</delete>
		<echo msg="Running phpcs with Joomla! Platform standards" />
		<phpcodesniffer
			standard="${platform.dir}/build/phpcs/Joomla"
			format="full"
			ignorePatterns="${repo.dir}/com_podcastmanager/admin/liveupdate,${repo.dir}/com_podcastmanager/admin/media/js,${repo.dir}/com_podcastmanager/site/media,${repo.dir}/lib_getid3,${repo.dir}/com_podcastmedia,${repo.dir}/plg_content_podcastmanager/soundmanager/script,${repo.dir}/com_podcastmedia,${repo.dir}/plg_content_podcastmanager/soundmanager/swf,${repo.dir}/packaging,${repo.dir}/releases"
			file="${repo.dir}"
			allowedFileExtensions="php,css">
			<formatter type="full" outfile="${repo.dir}/build/codesniff.txt" />
			<formatter type="checkstyle" outfile="${repo.dir}/build/checkstyle.xml" />
		</phpcodesniffer>
	</target>
</project>
